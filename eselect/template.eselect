# -*-eselect-*-  vim: ft=eselect

DESCRIPTION="Manage the @NAME symlink"
MAINTAINER="@MAINTAINER"
VERSION="@VERSION"

find_targets() {
	local f
	for f in @PATTERN; do
		[[ -d ${f} ]] && basename "${f}"
	done
}

remove_symlink() {
	rm "@FULLPATH"
}

set_symlink() {
	local target=$1

	if is_number "${target}"; then
		local targets=( $(find_targets) )
		target=${targets[target-1]}
	fi

	[[ -z ${target} || ! -d @BASEPATH/${target} ]] \
		&& die -q "Target \"$1\" doesn't appear to be valid!"

	echo "setting symlink to ${target}"
	ln -s "${target}" "@FULLPATH"
}

describe_show() {
	echo "Show the current @NAME symlink"
}

do_show() {
	write_list_start "Current @NAME symlink:"
	if [[ -L @FULLPATH ]]; then
		local @NAME=$(canonicalise "@FULLPATH")
		write_kv_list_entry "${@NAME%/}" ""
	else
		write_kv_list_entry "(unset)" ""
	fi
}

describe_list() {
	echo "List available @NAME symlink targets"
}

do_list() {
	local i targets=( $(find_targets) )

	write_list_start "Available @NAME symlink targets:"
	for (( i = 0; i < ${#targets[@]}; i++ )); do
		# highlight the target where the symlink is pointing to
		[[ ${targets[i]} = \
			$(basename "$(canonicalise "@FULLPATH")") ]] \
			&& targets[i]=$(highlight_marker "${targets[i]}")
	done
	write_numbered_list -m "(none found)" "${targets[@]}"
}

describe_set() {
	echo "Set a new @NAME symlink target"
}

describe_set_parameters() {
	echo "<target>"
}

describe_set_options() {
	echo "target : Target name or number (from 'list' action)"
}

do_set() {
	[[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
	[[ $# -gt 1 ]] && die -q "Too many parameters"

	if [[ -L @FULLPATH ]]; then
		remove_symlink || die -q "Couldn't remove existing symlink"
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	elif [[ -e @FULLPATH ]]; then
		die -q "@FULLPATH exists but is not a symlink"
	else
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	fi
}
